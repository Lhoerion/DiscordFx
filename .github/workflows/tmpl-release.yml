name: Release template
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build template
    runs-on: windows-latest
    if: "contains(github.event.head_commit.message, 'Release template')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Bump version and push tag
        id: create-tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
      - name: Pack template
        run: |
          Add-Content -Path "./discordfx/version.txt" -Value "$("${{ steps.create-tag.outputs.new_tag }}".Substring(1))"
          Compress-Archive -Path "./discordfx" -DestinationPath "./docfx-tmpls-discordfx.zip"
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create-tag.outputs.new_tag }}
          release_name: Release ${{ steps.create-tag.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload template
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./docfx-tmpls-discordfx.zip
          asset_name: docfx-tmpls-discordfx.zip
          asset_content_type: application/zip
      - name: Cleanup tags
        if: ${{ failure() && steps.create-tag.outputs.new_tag == 'undefined' }}
        run: git push origin :refs/tags/${{ steps.create-tag.outputs.new_tag }}
